name: Django CI

on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
  workflow_dispatch:
  

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Run Tests
      run: |
        python manage.py test
    - name: Zip artifact for deployment
      run: zip release_${{ matrix.python-version }}.zip static/* -r
    - name: Upload artifact for deployment jobs
      uses: actions/upload-artifact@v3
      with:
        name: fmr-app_${{ matrix.python-version }}
        path: |
          release_${{ matrix.python-version }}.zip
             !venv/ 
  registerartifact:
    needs: build
    name: Register Artifact
    runs-on: ubuntu-latest
    steps:
      - name: ServiceNow Register Artifact
        uses: ServiceNow/servicenow-devops-register-artifact@v3.1.0
        with:
          devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
          instance-url: ${{ secrets.SN_INSTANCE_URL }}
          tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'Register Artifact'
          artifacts: '[{"name": "fmr","version": "0.9.${{ github.run_number }}","semanticVersion": "0.9.${{ github.run_number }}","repositoryName": "${{ github.repository }}"}]'
  publish-tests:
     runs-on: ubuntu-latest
     needs: registerartifact
     steps:
     - uses: actions/checkout@v3
     - name: ServiceNow DevOps Unit Test Results
       uses: ServiceNow/servicenow-devops-test-report@v3.1.0
       with:
         devops-integration-token: ${{ secrets.SN_DEVOPS_TOKEN }}
         instance-url: ${{ secrets.SN_INSTANCE_URL }}
         tool-id: ${{ secrets.SN_ORCHESTRATION_TOOL_ID }}
         context-github: ${{ toJSON(github) }}
         job-name: 'publish-tests'
         xml-report-filename: ./test-results/junit.xml
     - name: Publish Test Results
       uses: EnricoMi/publish-unit-test-result-action@v2
       if: always()
       with:
         files: |
           ./test-results/junit.xml
